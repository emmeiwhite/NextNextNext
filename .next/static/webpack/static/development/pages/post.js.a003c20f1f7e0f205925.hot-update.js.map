{"version":3,"file":"static/webpack/static/development/pages/post.js.a003c20f1f7e0f205925.hot-update.js","sources":["webpack:///./pages/post.js"],"sourcesContent":["import Layout from '../components/GeneralLayout';\nimport {withRouter} from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport Markdown from 'react-markdown'\n\n\n// We are trying to use the GLOBAL STYLES\n/*\nconst Post = withRouter(\n    (props)=>(\n        <Layout>\n            <h4>We are just trying to style the stuff, just not focus on logic at all!</h4>\n            <h2>ID PASSED: {props.router.query.id}</h2>\n\n            <div className=\"markdown\">\n                <Markdown source={ `\n                    This is our blog post.\n                    Yes. We can have a [link](/link).\n                    And we can have a title as well.\n\n                    ### This is a title\n\n                    And here's the content.\n                    `}/>\n             </div>\n\n                <style jsx global>{ `\n                    .markdown{\n                        font-family:segoe ui;\n                    }\n\n                    .markdown a {\n                        text-decoration: none;\n                        color: blue;\n                      }\n                 \n                      .markdown a:hover {\n                        opacity: 0.6;\n                      }\n                 \n                      .markdown h3 {\n                        margin: 0;\n                        padding: 0;\n                        text-transform: uppercase;\n                      }\n                    `}\n                   \n                </style>\n        </Layout>\n    )\n\n)\n\n*/\n// const Page = \n//     (props)=>(\n//         <Layout>\n//             <Post/>\n//         </Layout>\n//     )\n\n\n// export default Page;\n\n\n// let's get the data belonging to the particular id first using the getInitialProps.\n\n\n/*\nconst Post = (props)=>(\n    <Layout>\n        <h1>{props.show.name}</h1>\n        <p>{props.show.summary.replace(/<[/]?p>/g, '')}</p>\n\n        <img src={props.show.image.medium} />   \n       \n    </Layout>\n)\n\n// getInitialProps of next provides a callback called context object, which helps in fetching \n// various amount of data associated with the req.\nPost.getInitialProps = async function(context){\n    const {id} = context.query;\n    // Now based on the id, we'll make the API call and get the relevant data to be passed into the \n    // Post Component and show it as per our wish\n\n    const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n    const show = await res.json();\n\n    console.log(`Fetched show: ${show.name}`)\n    return{show};\n}\n*/\nexport default Post;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;A","sourceRoot":""}